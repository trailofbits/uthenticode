name: Tests

on:
  release:
    types:
      - published
  push:
    branches:
      - master
  pull_request:

env:
  vcpkg-commit: 9d47b24eacbd1cd94f139457ef6cd35e5d92cc84

jobs:
  build-linux:
    strategy:
      matrix:
        build-type: ["Debug"]
        build-shared:
         - { flag: "1", repr: "shared" }
         - { flag: "0", repr: "static" }
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Restore from cache and install vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ env.vcpkg-commit }}

      - name: deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang

      - name: configure
        run: |
          mkdir build && cd build
          cmake \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
            -DBUILD_SHARED_LIBS=${{ matrix.build-shared.flag }} \
            -DBUILD_SVCLI=1 \
            -DBUILD_TESTS=1 \
            ..

      - name: build
        working-directory: build
        run: cmake --build .

      - name: tests
        working-directory: build
        run: ./test/uthenticode_test

  build-macos:
    strategy:
      matrix:
        build-type: ["Debug"]
        build-shared:
         - { flag: "1", repr: "shared" }
         - { flag: "0", repr: "static" }
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Restore from cache and install vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ env.vcpkg-commit }}

      - name: configure
        run: |
          mkdir build && cd build
          cmake \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
            -DBUILD_SHARED_LIBS=${{ matrix.build-shared.flag }} \
            -DBUILD_SVCLI=1 \
            -DBUILD_TESTS=1 \
            ..

      - name: build
        working-directory: build
        run: cmake --build .

      - name: tests
        working-directory: build
        run: ./test/uthenticode_test

  build-windows:
    strategy:
      matrix:
        build-arch:
        - { arch: "x64", triplet: "x64-windows" }
        - { arch: "Win32", triplet: "x86-windows" }
        build-type: ["Debug"]
    runs-on: windows-latest
    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.build-arch.triplet }}
    steps:
      - uses: actions/checkout@v3

      - name: Restore from cache and install vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ env.vcpkg-commit }}

      - name: configure
        shell: bash
        run: |
          mkdir build
          cd build
          cmake \
            -G "Visual Studio 17 2022" \
            -A ${{ matrix.build-arch.arch }} \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
            -DBUILD_SVCLI=1 \
            -DBUILD_TESTS=1 \
            ..

      - name: build
        working-directory: build
        run: cmake --build . --config ${{ matrix.build-type }}

      - name: tests
        working-directory: build
        run: |
          ./test/${{ matrix.build-type }}/uthenticode_test

  all-tests-pass:
    if: always()

    needs:
    - build-linux
    - build-macos
    - build-windows

    runs-on: ubuntu-latest

    steps:
      - name: check test jobs
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
