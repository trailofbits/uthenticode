name: Tests

on:
  release:
    types:
      - published
  push:
    branches:
      - master
  pull_request:

env:
  vcpkg-commit: 8b62f6fff30c4321945f1e498d85929285d7083a
  vcpkg-install: pe-parse

jobs:
  build-linux:
    strategy:
      matrix:
        build-type: ["Debug", "Release"]
        build-shared:
         - { flag: "1", repr: "shared" }
         - { flag: "0", repr: "static" }
        compiler:
        - { CC: "clang", CXX: "clang++" }
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Restore from cache and install vcpkg
      uses: lukka/run-vcpkg@v6
      with:
        vcpkgGitCommitId: ${{ env.vcpkg-commit }}
        vcpkgArguments: ${{ env.vcpkg-install }}

    - name: deps
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev

    - name: configure
      run: |
        mkdir build && cd build
        cmake \
          -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
          -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
          -DBUILD_SHARED_LIBS=${{ matrix.build-shared.flag }} \
          -DBUILD_SVCLI=1 \
          -DBUILD_TESTS=1 \
          ..

    - name: build
      working-directory: build
      env:
        CC: ${{ matrix.compiler.CC }}
        CXX: ${{ matrix.compiler.CXX }}
      run: cmake --build .

    - name: tests
      working-directory: build
      run: ./test/uthenticode_test

    - name: archive
      if: |
        github.event.release && matrix.compiler.CC == 'clang'
      run:
        zip -r build.zip build

    - name: publish
      if: |
        github.event.release && matrix.compiler.CC == 'clang'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build.zip
        asset_name: ubuntu.${{ matrix.build-shared.repr }}.${{ matrix.build-type }}.zip
        asset_content_type: application/zip

  build-macos:
    strategy:
      matrix:
        build-type: ["Debug", "Release"]
        build-shared:
         - { flag: "1", repr: "shared" }
         - { flag: "0", repr: "static" }
        compiler:
        - { CC: "clang", CXX: "clang++" }
        - { CC: "gcc", CXX: "g++" }
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore from cache and install vcpkg
        uses: lukka/run-vcpkg@v6
        with:
          vcpkgGitCommitId: ${{ env.vcpkg-commit }}
          vcpkgArguments: ${{ env.vcpkg-install }} openssl

      - name: configure
        run: |
          mkdir build && cd build
          cmake \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
            -DBUILD_SHARED_LIBS=${{ matrix.build-shared.flag }} \
            -DBUILD_SVCLI=1 \
            -DBUILD_TESTS=1 \
            ..

      - name: build
        working-directory: build
        env:
          CC: ${{ matrix.compiler.CC }}
          CXX: ${{ matrix.compiler.CXX }}
        run: cmake --build .

      - name: tests
        working-directory: build
        run: ./test/uthenticode_test

      - name: archive
        if: |
          github.event.release && matrix.compiler.CC == 'clang'
        run:
          zip -r build.zip build

      - name: publish
        if: |
          github.event.release && matrix.compiler.CC == 'clang'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build.zip
          asset_name: macos.${{ matrix.build-shared.repr }}.${{ matrix.build-type }}.zip
          asset_content_type: application/zip

  build-windows:
    strategy:
      matrix:
        build-arch:
        - { arch: "x64", triplet: "x64-windows" }
        - { arch: "Win32", triplet: "x86-windows" }
        build-type: ["Debug", "Release"]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Restore from cache and install vcpkg
      uses: lukka/run-vcpkg@v6
      with:
        vcpkgGitCommitId: ${{ env.vcpkg-commit }}
        vcpkgArguments: ${{ env.vcpkg-install }} openssl
        vcpkgTriplet: ${{ matrix.build-arch.triplet }}

    - name: configure
      shell: bash
      run: |
        mkdir build
        cd build
        cmake \
          -G "Visual Studio 17 2022" \
          -A ${{ matrix.build-arch.arch }} \
          -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
          -DBUILD_SVCLI=1 \
          -DBUILD_TESTS=1 \
          ..

    - name: build
      working-directory: build
      run: cmake --build . --config ${{ matrix.build-type }}

    - name: tests
      working-directory: build
      run: |
        ./test/${{ matrix.build-type }}/uthenticode_test

    - name: archive
      if: |
        github.event.release
      run:
        7z a build.zip build

    - name: publish
      if: |
        github.event.release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build.zip
        asset_name: windows.${{ matrix.build-arch.arch }}.${{ matrix.build-type }}.zip
        asset_content_type: application/zip

  all-tests-pass:
    if: always()

    needs:
    - build-linux
    - build-macos
    - build-windows

    runs-on: ubuntu-latest

    steps:
      - name: check test jobs
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
